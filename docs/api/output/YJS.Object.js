Ext.data.JsonP.YJS_Object({"tagname":"class","name":"YJS.Object","autodetected":{},"files":[{"filename":"yourjs-all-debug.js","href":"yourjs-all-debug.html#YJS-Object"}],"singleton":true,"members":[{"name":"put","tagname":"method","owner":"YJS.Object","id":"method-put","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-YJS.Object","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/yourjs-all-debug.html#YJS-Object' target='_blank'>yourjs-all-debug.js</a></div></pre><div class='doc-contents'><p>A set of object related methods.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-put' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS.Object'>YJS.Object</span><br/><a href='source/yourjs-all-debug.html#YJS-Object-method-put' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS.Object-method-put' class='name expandable'>put</a>( <span class='pre'>object, path, value, [options]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the value on an object at the specified path. ...</div><div class='long'><p>Sets the value on an object at the specified path.</p>\n\n<pre><code>var object = { other: 'not affected', top: 'will be changed' };\n<a href=\"#!/api/YJS.Object-method-put\" rel=\"YJS.Object-method-put\" class=\"docClass\">YJS.Object.put</a>(object, 'top', 'was changed');\n\nobject = { other: 'not affected', top: 'will be changed' };\n<a href=\"#!/api/YJS.Object-method-put\" rel=\"YJS.Object-method-put\" class=\"docClass\">YJS.Object.put</a>(object, 'top.next', 'was changed', { force: true });\n// object now is: { other: 'not affected', top: { next: 'was changed' } }\n</code></pre>\n\n<p>See the Jasmine Specs for more example uses.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The object to set the value on.</p>\n</div></li><li><span class='pre'>path</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The path to the value. A path is a special selector that should lead to a unique point in the\n  object. Currently, only dot notation is understood. E.g., <code>'top.next.last'</code>.</p>\n</div></li><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value to set.</p>\n</div></li><li><span class='pre'>options</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>The options to use.</p>\n<ul><li><span class='pre'>force</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>Flag indicating whether to force the creation of missing objects along the\n  path.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul></div></li></ul></div></div></div></div></div></div></div>","meta":{}});