Ext.data.JsonP.YJS_String({"tagname":"class","name":"YJS.String","autodetected":{},"files":[{"filename":"String.js","href":"String.html#YJS-String"}],"singleton":true,"members":[{"name":"printf","tagname":"method","owner":"YJS.String","id":"method-printf","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-YJS.String","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/String.html#YJS-String' target='_blank'>String.js</a></div></pre><div class='doc-contents'><p>A set of String related methods.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-printf' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS.String'>YJS.String</span><br/><a href='source/String.html#YJS-String-method-printf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS.String-method-printf' class='name expandable'>printf</a>( <span class='pre'>pattern, [varargs]</span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><span class=\"signature\"></span></div><div class='description'><div class='short'>A utility function that behaves similar to the C programming language's printf function. ...</div><div class='long'><p>A utility function that behaves similar to the C programming language's printf function.</p>\n\n<pre><code><a href=\"#!/api/YJS.String-method-printf\" rel=\"YJS.String-method-printf\" class=\"docClass\">YJS.String.printf</a>('Hello World!'); // \"Hello World!\"\n<a href=\"#!/api/YJS.String-method-printf\" rel=\"YJS.String-method-printf\" class=\"docClass\">YJS.String.printf</a>('Hello', ' World!', ' What a beautiful day!'); // \"Hello World! What a beautiful day!\"\n<a href=\"#!/api/YJS.String-method-printf\" rel=\"YJS.String-method-printf\" class=\"docClass\">YJS.String.printf</a>('%s %s', 'Hello', 'World!'); // \"Hello World!\"\n<a href=\"#!/api/YJS.String-method-printf\" rel=\"YJS.String-method-printf\" class=\"docClass\">YJS.String.printf</a>('%s %s', 'Hello'); // \"Hello %s\"\n<a href=\"#!/api/YJS.String-method-printf\" rel=\"YJS.String-method-printf\" class=\"docClass\">YJS.String.printf</a>('%s must be between %i and %f.', 'It', 1.2, 3.14); // \"It must be between 1 and 3.14.\"\n<a href=\"#!/api/YJS.String-method-printf\" rel=\"YJS.String-method-printf\" class=\"docClass\">YJS.String.printf</a>('%s %s', 'Hello', 'World!', ' What a beautiful day!'); // \"Hello World! What a beautiful day!\"\n</code></pre>\n\n<p>Three different placeholders are understood.</p>\n\n<ul>\n<li>%f converts the replacement value to a float before replacing.</li>\n<li>%i converts the replacement value to an integer before replacing.</li>\n<li>%s converts the replacement value to a string before replacing.</li>\n</ul>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>pattern</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The string pattern/template with the printf style placeholders.</p>\n</div></li><li><span class='pre'>varargs</span> : Mixed (optional)<div class='sub-desc'><p>The replacement values.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>a string with the placeholders replaced with the specified replacement values.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});