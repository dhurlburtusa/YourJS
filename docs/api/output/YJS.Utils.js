Ext.data.JsonP.YJS_Utils({"tagname":"class","name":"YJS.Utils","autodetected":{},"files":[{"filename":"yourjs-all-debug.js","href":"yourjs-all-debug.html#YJS-Utils"}],"singleton":true,"requires":["YJS.core.Class"],"uses":["YJS.Number","YJS.log.Factory"],"members":[{"name":"typeOf","tagname":"method","owner":"YJS.Utils","id":"method-typeOf","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-YJS.Utils","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Requires</h4><div class='dependency'><a href='#!/api/YJS.core.Class' rel='YJS.core.Class' class='docClass'>YJS.core.Class</a></div><h4>Uses</h4><div class='dependency'><a href='#!/api/YJS.Number' rel='YJS.Number' class='docClass'>YJS.Number</a></div><div class='dependency'><a href='#!/api/YJS.log.Factory' rel='YJS.log.Factory' class='docClass'>YJS.log.Factory</a></div><h4>Files</h4><div class='dependency'><a href='source/yourjs-all-debug.html#YJS-Utils' target='_blank'>yourjs-all-debug.js</a></div></pre><div class='doc-contents'><p>A set of utility methods.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-typeOf' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS.Utils'>YJS.Utils</span><br/><a href='source/yourjs-all-debug.html#YJS-Utils-method-typeOf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS.Utils-method-typeOf' class='name expandable'>typeOf</a>( <span class='pre'>value</span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the type of the specified value as a string. ...</div><div class='long'><p>Returns the type of the specified value as a string. The list of possible types are:</p>\n\n<ul>\n<li><code>array</code>: If the specified value is an array.</li>\n<li><code>boolean</code>: If the specified value is a boolean value.</li>\n<li><code>date</code>: If the specified value is a <code>Date</code> object.</li>\n<li><code>function</code>: If the specified value is a function reference.</li>\n<li><code>nan</code>: If the specified value is <code>NaN</code>.</li>\n<li><code>negative_infinity</code>: If the specified value is <code><a href=\"#!/api/Number-property-NEGATIVE_INFINITY\" rel=\"Number-property-NEGATIVE_INFINITY\" class=\"docClass\">Number.NEGATIVE_INFINITY</a></code>.</li>\n<li><code>null</code>: If the specified value is <code>null</code>.</li>\n<li><code>number</code>: If the specified value is a number.</li>\n<li><code>object</code>: If the specified value is an object.</li>\n<li><code>positive_infinity</code>: If the specified value is <code><a href=\"#!/api/Number-property-POSITIVE_INFINITY\" rel=\"Number-property-POSITIVE_INFINITY\" class=\"docClass\">Number.POSITIVE_INFINITY</a></code>.</li>\n<li><code>regexp</code>: If the specified value is a regular expression.</li>\n<li><code>string</code>: If the specified value is a string.</li>\n<li><code>undefined</code>: If the specified value is <code>undefined</code>.</li>\n<li><code>undetermined</code>: If the specified value has an undetermined type. If this ever happens, then update this function\nto appropriately handle the value.</li>\n</ul>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : ?Mixed<div class='sub-desc'><p>The value to determine the type of.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>The type of the specified value.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});