Ext.data.JsonP.YJS_core_Class({"tagname":"class","name":"YJS.core.Class","autodetected":{},"files":[{"filename":"Class.js","href":"Class.html#YJS-core-Class"}],"singleton":true,"members":[{"name":"__addMembers","tagname":"method","owner":"YJS.core.Class","id":"method-__addMembers","meta":{"private":true}},{"name":"addMembers","tagname":"method","owner":"YJS.core.Class","id":"method-addMembers","meta":{}},{"name":"addStatics","tagname":"method","owner":"YJS.core.Class","id":"method-addStatics","meta":{}},{"name":"createConstructor","tagname":"method","owner":"YJS.core.Class","id":"method-createConstructor","meta":{"private":true}},{"name":"extend","tagname":"method","owner":"YJS.core.Class","id":"method-extend","meta":{}},{"name":"setConst","tagname":"method","owner":"YJS.core.Class","id":"method-setConst","meta":{}},{"name":"setPrivFn","tagname":"method","owner":"YJS.core.Class","id":"method-setPrivFn","meta":{}},{"name":"setProtFn","tagname":"method","owner":"YJS.core.Class","id":"method-setProtFn","meta":{}},{"name":"setPubFn","tagname":"method","owner":"YJS.core.Class","id":"method-setPubFn","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-YJS.core.Class","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Class.html#YJS-core-Class' target='_blank'>Class.js</a></div></pre><div class='doc-contents'><p>A helper class for defining object oriented like classes in JavaScript.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-__addMembers' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS.core.Class'>YJS.core.Class</span><br/><a href='source/Class.html#YJS-core-Class-method-__addMembers' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS.core.Class-method-__addMembers' class='name expandable'>__addMembers</a>( <span class='pre'>obj, members</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Adds members to the specified object. ...</div><div class='long'><p>Adds members to the specified object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>members</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-addMembers' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS.core.Class'>YJS.core.Class</span><br/><a href='source/Class.html#YJS-core-Class-method-addMembers' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS.core.Class-method-addMembers' class='name expandable'>addMembers</a>( <span class='pre'>Clazz, members</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds members to the specified class's prototype. ...</div><div class='long'><p>Adds members to the specified class's prototype.</p>\n\n<pre><code>Foo = function (...) { ... };\n<a href=\"#!/api/YJS.core.Class-method-addMembers\" rel=\"YJS.core.Class-method-addMembers\" class=\"docClass\">YJS.core.Class.addMembers</a>(Foo, {\n    bar: function () { return 'bar'; },\n    baz: 'qux',\n    CORGE: 'constant',\n    public: function (...) { ... },\n    _protected: function (...) { ... },\n    __private: function (...) { ... },\n    ...\n});\nvar foo = new Foo();\nconsole.log(foo.bar()); // 'bar'\nconsole.log(foo.baz); // 'qux'\nconsole.log(foo.CORGE); // 'constant'\nfoo.CORGE = 'qux'; // Throws error.\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Clazz</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The class to have members added to the prototype.</p>\n</div></li><li><span class='pre'>members</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The members to add. The key/value pairs represent the member-name/member-value.</p>\n</div></li></ul></div></div></div><div id='method-addStatics' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS.core.Class'>YJS.core.Class</span><br/><a href='source/Class.html#YJS-core-Class-method-addStatics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS.core.Class-method-addStatics' class='name expandable'>addStatics</a>( <span class='pre'>Clazz, members</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds static members to the specified class. ...</div><div class='long'><p>Adds static members to the specified class.</p>\n\n<pre><code>Foo = function (...) { ... };\n<a href=\"#!/api/YJS.core.Class-method-addStatics\" rel=\"YJS.core.Class-method-addStatics\" class=\"docClass\">YJS.core.Class.addStatics</a>(Foo, {\n    bar: function () { return 'bar'; },\n    BAZ: 'qux',\n    ...\n});\nconsole.log(Foo.bar()); // 'bar'\nconsole.log(Foo.BAZ); // 'qux'\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Clazz</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The class to have static members added.</p>\n</div></li><li><span class='pre'>members</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The members to add. The key/value pairs represent the member-name/member-value.</p>\n</div></li></ul></div></div></div><div id='method-createConstructor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS.core.Class'>YJS.core.Class</span><br/><a href='source/Class.html#YJS-core-Class-method-createConstructor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS.core.Class-method-createConstructor' class='name expandable'>createConstructor</a>( <span class='pre'>simpleName</span> ) : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Creates a new constructor function with the specified name. ...</div><div class='long'><p>Creates a new constructor function with the specified name. The constructor will call a function named\n<code>_initialize</code> if it exists.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>simpleName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The name of the constructor. Must not be <code>null</code>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a></span><div class='sub-desc'><p>the new constructor function.</p>\n</div></li></ul></div></div></div><div id='method-extend' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS.core.Class'>YJS.core.Class</span><br/><a href='source/Class.html#YJS-core-Class-method-extend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS.core.Class-method-extend' class='name expandable'>extend</a>( <span class='pre'>SuperClazz, Clazz</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Makes a class extend a superclass. ...</div><div class='long'><p>Makes a class extend a superclass.</p>\n\n<pre><code>var BaseClass = function () { ... };\nBaseClass.prototype.foo = function () { return 'foo'; };\nBaseClass.prototype.bar = \"Bar\";\nvar DerivedClass = function () { ... };\n<a href=\"#!/api/YJS.core.Class-method-extend\" rel=\"YJS.core.Class-method-extend\" class=\"docClass\">YJS.core.Class.extend</a>(BaseClass, DerivedClass);\nvar obj = new DerivedClass();\nconsole.log(obj.foo()); // \"foo\";\nconsole.log(obj.bar); // \"Bar\";\nobj.constructor; // Reference to the class that defined obj.\nobj.$clazz; // Reference to the class that defined obj, DerivedClass.\nobj.$superclazz; // Shortcut reference to the superclass, BaseClass.\nobj.constructor.$superclazz; // Reference to the superclass, BaseClass.\nobj.$clazz.$superclazz; // Reference to the superclass, BaseClass.\nDerivedClass.$isClazz; // true\nDerivedClass.$superclazz; // Reference to the superclass, BaseClass.\n</code></pre>\n\n<p>NOTE: The Class's prototype property will be an instance of the specified superclass after calling this method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>SuperClazz</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The constructor function of the superclass.</p>\n</div></li><li><span class='pre'>Clazz</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The constructor function of class extending the superclass.</p>\n</div></li></ul></div></div></div><div id='method-setConst' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS.core.Class'>YJS.core.Class</span><br/><a href='source/Class.html#YJS-core-Class-method-setConst' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS.core.Class-method-setConst' class='name expandable'>setConst</a>( <span class='pre'>obj, constName, [value]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds a constant to the specified object. ...</div><div class='long'><p>Adds a constant to the specified object.</p>\n\n<pre><code>Foo = {};\n...\n<a href=\"#!/api/YJS.core.Class-method-setConst\" rel=\"YJS.core.Class-method-setConst\" class=\"docClass\">YJS.core.Class.setConst</a>(Foo, 'BAR', 'bar');\nconsole.log(Foo.BAR); // 'bar'\nFoo.BAR = 'qux'; // Throws error in strict mode.\nconsole.log(Foo.BAR); // 'bar'\ndelete Foo.BAR; // Throws error in strict mode.\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The object to add the constant to.</p>\n</div></li><li><span class='pre'>constName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The name of the constant to set. Must not contain lowercase letters.</p>\n</div></li><li><span class='pre'>value</span> : Mixed (optional)<div class='sub-desc'><p>The value of the constant. It may be any value except a function -- be it a\n  primitive, an object, etc. Because objects are mutable, unless frozen or sealed, the properties of the could\n  be changed. For function 'properties', use <a href=\"#!/api/YJS.core.Class-method-setPubFn\" rel=\"YJS.core.Class-method-setPubFn\" class=\"docClass\">setPubFn</a>, <a href=\"#!/api/YJS.core.Class-method-setProtFn\" rel=\"YJS.core.Class-method-setProtFn\" class=\"docClass\">setProtFn</a>, or <a href=\"#!/api/YJS.core.Class-method-setPrivFn\" rel=\"YJS.core.Class-method-setPrivFn\" class=\"docClass\">setPrivFn</a> instead.</p>\n<p>Defaults to: <code>undefined</code></p></div></li></ul></div></div></div><div id='method-setPrivFn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS.core.Class'>YJS.core.Class</span><br/><a href='source/Class.html#YJS-core-Class-method-setPrivFn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS.core.Class-method-setPrivFn' class='name expandable'>setPrivFn</a>( <span class='pre'>obj, fnName, fn</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds a 'private' function to the specified object. ...</div><div class='long'><p>Adds a 'private' function to the specified object. It is private in the sense that it will not be enumerable, it\ncan't be redefined, and it is required to be named with double underscores.</p>\n\n<pre><code>Foo = function ();\n...\n<a href=\"#!/api/YJS.core.Class-method-setPrivFn\" rel=\"YJS.core.Class-method-setPrivFn\" class=\"docClass\">YJS.core.Class.setPrivFn</a>(Foo.prototype, '__doSomethingPrivate', function () {\n    // Logic to do something private goes here.\n});\n\nfor (var key in Foo.prototype) {\n    // Won't log '__doSomethingPrivate' because it is not enumerable.\n    console.log(key);\n}\n...\nvar foo = new Foo();\n// The following is still possible because JavaScript doesn't have true private\n// functions. And the closure trick to effectively create private functions is\n// not employed.\nfoo.__doSomethingPrivate();\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The object to add the private function to. This may be and usually should be a prototype object\n  so all instances of the object have this function.</p>\n</div></li><li><span class='pre'>fnName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The name of the function to set. Must begin with double underscores.</p>\n</div></li><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The private function.</p>\n</div></li></ul></div></div></div><div id='method-setProtFn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS.core.Class'>YJS.core.Class</span><br/><a href='source/Class.html#YJS-core-Class-method-setProtFn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS.core.Class-method-setProtFn' class='name expandable'>setProtFn</a>( <span class='pre'>obj, fnName, fn</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds a 'protected' function to the specified object. ...</div><div class='long'><p>Adds a 'protected' function to the specified object. It is protected in the sense that its name is required to begin\nwith a single underscore. Protected functions are enumerable since they are apart of the public API.</p>\n\n<pre><code>Foo = function ();\n...\n<a href=\"#!/api/YJS.core.Class-method-setProtFn\" rel=\"YJS.core.Class-method-setProtFn\" class=\"docClass\">YJS.core.Class.setProtFn</a>(Foo.prototype, 'initialize', function () {\n    // Logic to initialize Foo goes here.\n    this.initialize = <a href=\"#!/api/YJS-method-notAgainFn\" rel=\"YJS-method-notAgainFn\" class=\"docClass\">YJS.notAgainFn</a>; // Still can be hidden in object instance.\n});\n...\n<a href=\"#!/api/YJS.core.Class-method-setProtFn\" rel=\"YJS.core.Class-method-setProtFn\" class=\"docClass\">YJS.core.Class.setProtFn</a>(Foo.prototype, '_findBar', function () {\n    // Logic to find bar goes here.\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The object to add the protected function to. This may be and usually should be a prototype object\n  so all instances of the object have this function.</p>\n</div></li><li><span class='pre'>fnName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The name of the function to set. Must begin with a single underscore.</p>\n</div></li><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The protected function.</p>\n</div></li></ul></div></div></div><div id='method-setPubFn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS.core.Class'>YJS.core.Class</span><br/><a href='source/Class.html#YJS-core-Class-method-setPubFn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS.core.Class-method-setPubFn' class='name expandable'>setPubFn</a>( <span class='pre'>obj, fnName, fn</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds a public function to the specified object. ...</div><div class='long'><p>Adds a public function to the specified object. Public functions are enumerable since they are apart of the\npublic API.</p>\n\n<pre><code>Foo = function ();\n...\n<a href=\"#!/api/YJS.core.Class-method-setPubFn\" rel=\"YJS.core.Class-method-setPubFn\" class=\"docClass\">YJS.core.Class.setPubFn</a>(Foo.prototype, 'initialize', function () {\n    // Logic to initialize Foo goes here.\n    this.initialize = <a href=\"#!/api/YJS-method-notAgainFn\" rel=\"YJS-method-notAgainFn\" class=\"docClass\">YJS.notAgainFn</a>; // Still can be hidden in object instance.\n});\n...\n<a href=\"#!/api/YJS.core.Class-method-setPubFn\" rel=\"YJS.core.Class-method-setPubFn\" class=\"docClass\">YJS.core.Class.setPubFn</a>(Foo.prototype, 'findBar', function () {\n    // Logic to find bar goes here.\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The object to add the public function to. This may be and usually should be a prototype object\n  so all instances of the object have this function.</p>\n</div></li><li><span class='pre'>fnName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The name of the function to set. Must not begin with any underscores.</p>\n</div></li><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The public function.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});