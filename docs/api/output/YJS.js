Ext.data.JsonP.YJS({"tagname":"class","name":"YJS","autodetected":{},"files":[{"filename":"Core.js","href":"Core.html#YJS"}],"singleton":true,"members":[{"name":"GBL","tagname":"property","owner":"YJS","id":"property-GBL","meta":{"readonly":true}},{"name":"__setFn","tagname":"method","owner":"YJS","id":"method-__setFn","meta":{"private":true}},{"name":"__setMember","tagname":"method","owner":"YJS","id":"method-__setMember","meta":{"private":true}},{"name":"noopFn","tagname":"method","owner":"YJS","id":"method-noopFn","meta":{}},{"name":"notAgainFn","tagname":"method","owner":"YJS","id":"method-notAgainFn","meta":{}},{"name":"ns","tagname":"method","owner":"YJS","id":"method-ns","meta":{}},{"name":"nullFn","tagname":"method","owner":"YJS","id":"method-nullFn","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-YJS","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Core.html#YJS' target='_blank'>Core.js</a></div></pre><div class='doc-contents'>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-GBL' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS'>YJS</span><br/><a href='source/Core.html#YJS-property-GBL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS-property-GBL' class='name expandable'>GBL</a> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"><span class='readonly' >readonly</span></span></div><div class='description'><div class='short'>A reference to the global namespace. ...</div><div class='long'><p>A reference to the global namespace. In a web-browser environment, this is a reference to the global <code>window</code>\nobject.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-__setFn' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS'>YJS</span><br/><a href='source/Core.html#YJS-method-__setFn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS-method-__setFn' class='name expandable'>__setFn</a>( <span class='pre'>obj, memberName, dataDesc</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The object to add the member (property/function) to.</p>\n</div></li><li><span class='pre'>memberName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The name of the member to set.</p>\n</div></li><li><span class='pre'>dataDesc</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The member descriptor. May be a data-descriptor or an accessor-descriptor. See\n  <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\">Object.defineProperty</a>\n  for details.</p>\n<ul><li><span class='pre'>c</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>The <code>configurable</code> flag of the descriptor.</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>e</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>The <code>enumerable</code> flag of the descriptor.</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>g</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>The <code>get</code> property of the descriptor.</p>\n<p>Defaults to: <code>undefined</code></p></div></li><li><span class='pre'>s</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>The <code>set</code> property of the descriptor.</p>\n<p>Defaults to: <code>undefined</code></p></div></li><li><span class='pre'>v</span> : Mixed (optional)<div class='sub-desc'><p>The value of the member. It may be any value -- be it a function, a primitive, etc.</p>\n<p>Defaults to: <code>undefined</code></p></div></li><li><span class='pre'>w</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>The <code>writable</code> flag of the descriptor.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul></div></li></ul></div></div></div><div id='method-__setMember' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS'>YJS</span><br/><a href='source/Core.html#YJS-method-__setMember' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS-method-__setMember' class='name expandable'>__setMember</a>( <span class='pre'>obj, memberName, dataOrAccessorDesc</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The object to add the member (property/function) to.</p>\n</div></li><li><span class='pre'>memberName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The name of the member to set.</p>\n</div></li><li><span class='pre'>dataOrAccessorDesc</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The member descriptor. May be a data-descriptor or an accessor-descriptor. See\n  <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\">Object.defineProperty</a>\n  for details.</p>\n<ul><li><span class='pre'>c</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>The <code>configurable</code> flag of the descriptor.</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>e</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>The <code>enumerable</code> flag of the descriptor.</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>g</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>The <code>get</code> property of the descriptor.</p>\n<p>Defaults to: <code>undefined</code></p></div></li><li><span class='pre'>s</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>The <code>set</code> property of the descriptor.</p>\n<p>Defaults to: <code>undefined</code></p></div></li><li><span class='pre'>v</span> : Mixed (optional)<div class='sub-desc'><p>The value of the member. It may be any value -- be it a function,\n  a primitive, etc.</p>\n<p>Defaults to: <code>undefined</code></p></div></li><li><span class='pre'>w</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a> (optional)<div class='sub-desc'><p>The <code>writable</code> flag of the descriptor.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul></div></li></ul></div></div></div><div id='method-noopFn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS'>YJS</span><br/><a href='source/Core.html#YJS-method-noopFn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS-method-noopFn' class='name expandable'>noopFn</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>A function that does nothing. ...</div><div class='long'><p>A function that does nothing.</p>\n\n<p>What use is a function that does nothing? Well, many times a particular member of an object is expected to be a\nfunction. In order to avoid errors, this member can be assigned the no-op function. This will allow code treating\nthe member as a function to continue to function without error.</p>\n\n<pre><code>// `requiredFn` is the object member expected to be a function.\nMyObj.prototype.requiredFn = <a href=\"#!/api/YJS-method-noopFn\" rel=\"YJS-method-noopFn\" class=\"docClass\">YJS.noopFn</a>;\n...\nmyObjInstance.requiredFn(); // Won't throw an error.\n</code></pre>\n\n<p>Some other uses:</p>\n\n<pre><code>MyObj.prototype.justDoOnceButOkayIfCalledMultipleTimes = function () {\n    ...\n    // Adds an instance declaration of this function. It doesn't affect the prototype declaration.\n    // Therefore, new instances of MyObj will continue to behave as expected.\n    this.justDoOnceButOkayIfCalledMultipleTimes = <a href=\"#!/api/YJS-method-noopFn\" rel=\"YJS-method-noopFn\" class=\"docClass\">YJS.noopFn</a>;\n};\n...\n// The following call will do whatever the prototype function was designed to do.\nmyObjInstance.justDoOnceButOkayIfCalledMultipleTimes();\n// The second call will effectively do nothing because this is now a call to the no-op function.\nmyObjInstance.justDoOnceButOkayIfCalledMultipleTimes();\n</code></pre>\n</div></div></div><div id='method-notAgainFn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS'>YJS</span><br/><a href='source/Core.html#YJS-method-notAgainFn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS-method-notAgainFn' class='name expandable'>notAgainFn</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>A function that throws an error with a message stating that this method should have not been called again. ...</div><div class='long'><p>A function that throws an error with a message stating that this method should have not been called again. This\ncould be useful in situations where a function on an object should only be called a limited number of times.\nWhen that limit is reached, the function can assign itself this function. Then the next call to the function will\nthrow an error. This can prove useful to find extraneous calls to functions.</p>\n\n<pre><code>MyObj.prototype.onlyCallMeALimitedNumberOfTimes = function () {\n    ...\n    // Adds an instance declaration of this function. It doesn't affect the prototype declaration.\n    // Therefore, new instances of MyObj will continue to behave as expected.\n    if (limitReached) {\n        this.onlyCallMeALimitedNumberOfTimes = <a href=\"#!/api/YJS-method-notAgainFn\" rel=\"YJS-method-notAgainFn\" class=\"docClass\">YJS.notAgainFn</a>;\n    }\n};\n...\n// The following call will do whatever the prototype function was designed to do.\nmyObjInstance.onlyCallMeALimitedNumberOfTimes();\n...\n// The following will throw an Error when the limit has been reached. Now the\n// developer can remove the extraneous call.\nmyObjInstance.onlyCallMeALimitedNumberOfTimes();\n</code></pre>\n</div></div></div><div id='method-ns' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS'>YJS</span><br/><a href='source/Core.html#YJS-method-ns' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS-method-ns' class='name expandable'>ns</a>( <span class='pre'>namespaces</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Creates new namespaces when necessary. ...</div><div class='long'><p>Creates new namespaces when necessary.</p>\n\n<pre><code>var Foo = <a href=\"#!/api/YJS-method-ns\" rel=\"YJS-method-ns\" class=\"docClass\">YJS.ns</a>('Foo');\n<a href=\"#!/api/YJS-method-ns\" rel=\"YJS-method-ns\" class=\"docClass\">YJS.ns</a>('Bar');\nBar.someMethod = function (...) { ... };\nvar App_example = <a href=\"#!/api/YJS-method-ns\" rel=\"YJS-method-ns\" class=\"docClass\">YJS.ns</a>('App.example');\nApp_example.Bar = ...;\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>namespaces</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>A dot (<code>'.'</code>) delimited set of namespaces to be created if necessary.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>A reference to the last namespace in the dot delimited set of namespaces.</p>\n</div></li></ul></div></div></div><div id='method-nullFn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS'>YJS</span><br/><a href='source/Core.html#YJS-method-nullFn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS-method-nullFn' class='name expandable'>nullFn</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>The null function is simply a function that returns null. ...</div><div class='long'><p>The null function is simply a function that returns <code>null</code>. It can be used in a similar fashion to the\n<a href=\"#!/api/YJS-method-noopFn\" rel=\"YJS-method-noopFn\" class=\"docClass\">no-op function</a> but might be more suited if a legitament value (as opposed to <code>undefined</code>) is\nexpected to be returned.</p>\n</div></div></div></div></div></div></div>","meta":{}});