Ext.data.JsonP.YJS_log_Logger({"tagname":"class","name":"YJS.log.Logger","autodetected":{},"files":[{"filename":"yourjs-all-debug.js","href":"yourjs-all-debug.html#YJS-log-Logger"}],"requires":["YJS.log.ArrayAppender","YJS.log.ConsoleAppender"],"uses":["YJS.String","YJS.log.Appender","YJS.log.Entry"],"members":[{"name":"pattern","tagname":"property","owner":"YJS.log.Logger","id":"property-pattern","meta":{"readonly":true}},{"name":"ROOT_ARRAY","tagname":"property","owner":"YJS.log.Logger","id":"static-property-ROOT_ARRAY","meta":{"static":true}},{"name":"ROOT_DEFAULT","tagname":"property","owner":"YJS.log.Logger","id":"static-property-ROOT_DEFAULT","meta":{"static":true}},{"name":"constructor","tagname":"method","owner":"YJS.log.Logger","id":"method-constructor","meta":{}},{"name":"_createLogEntry","tagname":"method","owner":"YJS.log.Logger","id":"method-_createLogEntry","meta":{"protected":true,"template":true}},{"name":"logAt","tagname":"method","owner":"YJS.log.Logger","id":"method-logAt","meta":{}},{"name":"willHandle","tagname":"method","owner":"YJS.log.Logger","id":"method-willHandle","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-YJS.log.Logger","short_doc":"A logger determines what YJS.log.Logs it handles based on its configured minimum and maximum log\nlevels. ...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Requires</h4><div class='dependency'><a href='#!/api/YJS.log.ArrayAppender' rel='YJS.log.ArrayAppender' class='docClass'>YJS.log.ArrayAppender</a></div><div class='dependency'><a href='#!/api/YJS.log.ConsoleAppender' rel='YJS.log.ConsoleAppender' class='docClass'>YJS.log.ConsoleAppender</a></div><h4>Uses</h4><div class='dependency'><a href='#!/api/YJS.String' rel='YJS.String' class='docClass'>YJS.String</a></div><div class='dependency'><a href='#!/api/YJS.log.Appender' rel='YJS.log.Appender' class='docClass'>YJS.log.Appender</a></div><div class='dependency'><a href='#!/api/YJS.log.Entry' rel='YJS.log.Entry' class='docClass'>YJS.log.Entry</a></div><h4>Files</h4><div class='dependency'><a href='source/yourjs-all-debug.html#YJS-log-Logger' target='_blank'>yourjs-all-debug.js</a></div></pre><div class='doc-contents'><p>A logger determines what <a href=\"#!/api/YJS.log.Log\" rel=\"YJS.log.Log\" class=\"docClass\">YJS.log.Log</a>s it handles based on its configured minimum and maximum log\nlevels. However, prior to this, the current log configuration uses each logger's name pattern to determine which\nloggers should handle which logs based on the log's name. The logger with the longest matching pattern will be\ngiven authority to handle the log. If the logger also determines it handles a log at the log's specified level,\nthen it delegates the logging work to the list of configured <a href=\"#!/api/YJS.log.Appender\" rel=\"YJS.log.Appender\" class=\"docClass\">YJS.log.Appender</a>s.</p>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance properties</h3><div id='property-pattern' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS.log.Logger'>YJS.log.Logger</span><br/><a href='source/yourjs-all-debug.html#YJS-log-Logger-property-pattern' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS.log.Logger-property-pattern' class='name expandable'>pattern</a> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><span class=\"signature\"><span class='readonly' >readonly</span></span></div><div class='description'><div class='short'><p>A pattern of the log names that this logger will handle.</p>\n</div><div class='long'><p>A pattern of the log names that this logger will handle.</p>\n</div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static properties</h3><div id='static-property-ROOT_ARRAY' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS.log.Logger'>YJS.log.Logger</span><br/><a href='source/yourjs-all-debug.html#YJS-log-Logger-static-property-ROOT_ARRAY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS.log.Logger-static-property-ROOT_ARRAY' class='name expandable'>ROOT_ARRAY</a> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'><p>A reference to a root logger configured with a single <a href=\"#!/api/YJS.log.ArrayAppender\" rel=\"YJS.log.ArrayAppender\" class=\"docClass\">YJS.log.ArrayAppender</a> array appender.</p>\n</div><div class='long'><p>A reference to a root logger configured with a single <a href=\"#!/api/YJS.log.ArrayAppender\" rel=\"YJS.log.ArrayAppender\" class=\"docClass\">YJS.log.ArrayAppender</a> array appender.</p>\n</div></div></div><div id='static-property-ROOT_DEFAULT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS.log.Logger'>YJS.log.Logger</span><br/><a href='source/yourjs-all-debug.html#YJS-log-Logger-static-property-ROOT_DEFAULT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS.log.Logger-static-property-ROOT_DEFAULT' class='name expandable'>ROOT_DEFAULT</a> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>A reference to the default root logger. ...</div><div class='long'><p>A reference to the default root logger. This logger is configured with a single appender -- the\n<a href=\"#!/api/YJS.log.ConsoleAppender\" rel=\"YJS.log.ConsoleAppender\" class=\"docClass\">YJS.log.ConsoleAppender</a>.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS.log.Logger'>YJS.log.Logger</span><br/><a href='source/yourjs-all-debug.html#YJS-log-Logger-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/YJS.log.Logger-method-constructor' class='name expandable'>YJS.log.Logger</a>( <span class='pre'>cfgs</span> ) : <a href=\"#!/api/YJS.log.Logger\" rel=\"YJS.log.Logger\" class=\"docClass\">YJS.log.Logger</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Constructs a Logger which will usually be given to a ConfigBuilder. ...</div><div class='long'><p>Constructs a Logger which will usually be given to a ConfigBuilder.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cfgs</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n<ul><li><span class='pre'>pattern</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>A pattern of the log names that this logger will handle. Used by the current\n  <a href=\"#!/api/YJS.log.Config\" rel=\"YJS.log.Config\" class=\"docClass\">log configuration</a> to determine whether this logger or another logger should handle a log.</p>\n</div></li><li><span class='pre'>appenders</span> : <a href=\"#!/api/YJS.log.Appender\" rel=\"YJS.log.Appender\" class=\"docClass\">YJS.log.Appender</a>|<a href=\"#!/api/YJS.log.Appender\" rel=\"YJS.log.Appender\" class=\"docClass\">YJS.log.Appender</a>[] (optional)<div class='sub-desc'><p>The log appenders each handled log will be passed to.</p>\n<p>Defaults to: <code>[]</code></p></div></li><li><span class='pre'>maxLevel</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> (optional)<div class='sub-desc'><p>The maximum log-level to handle. See <a href=\"#!/api/YJS.log.Level\" rel=\"YJS.log.Level\" class=\"docClass\">YJS.log.Level</a> for pre-defined\n  log-level values. Other levels beside the pre-defined are allowed too.</p>\n<p>Defaults to: <code>Number.MAX_VALUE</code></p></div></li><li><span class='pre'>minLevel</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> (optional)<div class='sub-desc'><p>The minimum log-level to handle. See <a href=\"#!/api/YJS.log.Level\" rel=\"YJS.log.Level\" class=\"docClass\">YJS.log.Level</a> for pre-defined\n  log-level values. Other levels beside the pre-defined are allowed too.</p>\n<p>Defaults to: <code>-Number.MAX_VALUE</code></p></div></li></ul></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/YJS.log.Logger\" rel=\"YJS.log.Logger\" class=\"docClass\">YJS.log.Logger</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-_createLogEntry' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS.log.Logger'>YJS.log.Logger</span><br/><a href='source/yourjs-all-debug.html#YJS-log-Logger-method-_createLogEntry' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS.log.Logger-method-_createLogEntry' class='name expandable'>_createLogEntry</a>( <span class='pre'>logLevel, template, data</span> )<span class=\"signature\"><span class='protected' >protected</span><span class='template' >template</span></span></div><div class='description'><div class='short'>Creates a new log entry based on the given arguments. ...</div><div class='long'><p>Creates a new log entry based on the given arguments.</p>\n      <div class='rounded-box template-box'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>logLevel</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>The level at which to log the message. See <a href=\"#!/api/YJS.log.Level\" rel=\"YJS.log.Level\" class=\"docClass\">YJS.log.Level</a> for pre-defined log-level values.\n  Other levels beside the pre-defined are allowed too.</p>\n</div></li><li><span class='pre'>template</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The message template with optional placeholders (aka substitution strings) that is used to\n  help form the log message.</p>\n</div></li><li><span class='pre'>data</span> : Mixed...<div class='sub-desc'><p>The data to merge with the template and/or to append to the end of the message.</p>\n</div></li></ul></div></div></div><div id='method-logAt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS.log.Logger'>YJS.log.Logger</span><br/><a href='source/yourjs-all-debug.html#YJS-log-Logger-method-logAt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS.log.Logger-method-logAt' class='name expandable'>logAt</a>( <span class='pre'>logLevel, template, data</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Logs the given message/template at the specified level. ...</div><div class='long'><p>Logs the given message/template at the specified level.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>logLevel</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>The level at which to log the message. See <a href=\"#!/api/YJS.log.Level\" rel=\"YJS.log.Level\" class=\"docClass\">YJS.log.Level</a> for pre-defined log-level values.\n  Other levels beside the pre-defined are allowed too.</p>\n</div></li><li><span class='pre'>template</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The message template with optional placeholders (aka substitution strings) that is used to\n  help form the log message.</p>\n</div></li><li><span class='pre'>data</span> : Mixed...<div class='sub-desc'><p>The data to merge with the template and/or to append to the end of the message.</p>\n</div></li></ul></div></div></div><div id='method-willHandle' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='YJS.log.Logger'>YJS.log.Logger</span><br/><a href='source/yourjs-all-debug.html#YJS-log-Logger-method-willHandle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/YJS.log.Logger-method-willHandle' class='name expandable'>willHandle</a>( <span class='pre'>logLevel</span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if this logger will handle a log at the specified log-level. ...</div><div class='long'><p>Checks if this logger will handle a log at the specified log-level.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>logLevel</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>The log-level to check against. See <a href=\"#!/api/YJS.log.Level\" rel=\"YJS.log.Level\" class=\"docClass\">YJS.log.Level</a> for pre-defined log-level values.\n  Other levels beside the pre-defined are allowed too.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><div class='sub-desc'><p><code>true</code> if this logger will handle a log at the specified log-level, <code>false</code> otherwise.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});